{"ast":null,"code":"var _jsxFileName = \"/home/arpit/Project_DBMS/Voice-based-Transport-Enquiry-System/voiceenquirysystem/src/Components/VoiceResolver/App.js\";\nimport React from 'react';\nimport Artyom from 'artyom.js';\nimport ArtyomCommandsManager from './ArtyomCommands.js';\nimport tachyons from 'tachyons';\nconst Jarvis = new Artyom();\nexport default class App extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.startAssistant = () => {\n      let _this = this;\n\n      console.log(\"Artyom succesfully started !\");\n      Jarvis.initialize({\n        lang: \"en-GB\",\n        debug: true,\n        continuous: true,\n        soundex: true,\n        listen: true\n      }).then(() => {\n        // Display loaded commands in the console\n        console.log(Jarvis.getAvailableCommands());\n        Jarvis.say(\"Start?\");\n\n        _this.setState({\n          artyomActive: true\n        });\n      }).catch(err => {\n        console.error(\"Oopsy daisy, this shouldn't happen !\", err);\n      });\n      Jarvis.redirectRecognizedTextOutput((recognizedText, isFinal) => {\n        if (isFinal) {\n          document.getElementById(this.props.id).value = recognizedText;\n          this.setState({\n            textValue: recognizedText\n          });\n        } else {\n          document.getElementById(this.props.id).value = recognizedText;\n        }\n      });\n    };\n\n    this.handleClick1 = event => {\n      event.preventDefault();\n      this.startAssistant();\n    };\n\n    this.handleClick2 = event => {\n      event.preventDefault();\n      this.stopAssistant();\n      console.log(this.state);\n    };\n\n    this.startAssistant = this.startAssistant.bind(this);\n    this.stopAssistant = this.stopAssistant.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.state = {\n      artyomActive: false,\n      textValue: ''\n    };\n    let CommandsManager = new ArtyomCommandsManager(Jarvis);\n    CommandsManager.loadCommands();\n  }\n\n  stopAssistant() {\n    let _this = this;\n\n    Jarvis.fatality().then(() => {\n      console.log(\"Jarvis has been succesfully stopped\");\n      console.log(this.state);\n\n      _this.setState({\n        artyomActive: false\n      });\n    }).catch(err => {\n      console.error(\"Oopsy daisy, this shouldn't happen neither!\", err);\n\n      _this.setState({\n        artyomActive: false\n      });\n    });\n  }\n\n  handleTextChange(event) {\n    this.setState({\n      textValue: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"bg-gold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      onChange: this.handleTextChange,\n      id: this.props.id,\n      value: this.state.textValue,\n      style: {\n        width: \"200px\",\n        height: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"image\",\n      value: \"Start Artyom\",\n      disabled: this.state.artyomActive,\n      src: \"https://robohash.org/1\",\n      style: {\n        width: \"auto\",\n        height: \"50px\"\n      },\n      onClick: this.handleClick1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"image\",\n      value: \"Stop Artyom\",\n      disabled: !this.state.artyomActive,\n      src: \"https://robohash.org/2\",\n      style: {\n        width: \"auto\",\n        height: \"50px\"\n      },\n      onClick: this.handleClick2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/arpit/Project_DBMS/Voice-based-Transport-Enquiry-System/voiceenquirysystem/src/Components/VoiceResolver/App.js"],"names":["React","Artyom","ArtyomCommandsManager","tachyons","Jarvis","App","Component","constructor","props","context","startAssistant","_this","console","log","initialize","lang","debug","continuous","soundex","listen","then","getAvailableCommands","say","setState","artyomActive","catch","err","error","redirectRecognizedTextOutput","recognizedText","isFinal","document","getElementById","id","value","textValue","handleClick1","event","preventDefault","handleClick2","stopAssistant","state","bind","handleTextChange","CommandsManager","loadCommands","fatality","target","render","width","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Artyom from 'artyom.js';\nimport ArtyomCommandsManager from './ArtyomCommands.js';\nimport tachyons from 'tachyons';\n\nconst Jarvis = new Artyom();\n\nexport default class App extends React.Component {\n    constructor (props, context){\n        super(props, context);\n\n        this.startAssistant = this.startAssistant.bind(this);\n        this.stopAssistant = this.stopAssistant.bind(this);\n        this.handleTextChange = this.handleTextChange.bind(this);\n        \n        this.state = {\n            artyomActive: false,\n            textValue: ''\n        };\n\n        let CommandsManager = new ArtyomCommandsManager(Jarvis);\n        CommandsManager.loadCommands();\n    }\n\n    startAssistant=() => {\n        let _this = this;\n\n        console.log(\"Artyom succesfully started !\");\n\n        Jarvis.initialize({\n            lang: \"en-GB\",\n            debug: true,\n            continuous: true,\n            soundex: true,\n            listen: true\n        }).then(() => {\n            // Display loaded commands in the console\n            console.log(Jarvis.getAvailableCommands());\n\n            Jarvis.say(\"Start?\");\n\n            _this.setState({\n                artyomActive: true\n            });\n        }).catch((err) => {\n            console.error(\"Oopsy daisy, this shouldn't happen !\", err);\n        });\n\n        Jarvis.redirectRecognizedTextOutput((recognizedText, isFinal) => {\n            if(isFinal){\n                document.getElementById(this.props.id).value = recognizedText;\n                this.setState({textValue:recognizedText})\n            }else{\n                document.getElementById(this.props.id).value = recognizedText;\n                \n            }\n        });\n    }\n\n    stopAssistant() {\n        let _this = this;\n\n        Jarvis.fatality().then(() => {\n            console.log(\"Jarvis has been succesfully stopped\");\n            console.log(this.state);\n            \n            _this.setState({\n                artyomActive: false\n            });\n            \n        }).catch((err) => {\n            console.error(\"Oopsy daisy, this shouldn't happen neither!\", err);\n\n            _this.setState({\n                artyomActive: false\n            });\n        });\n    }\n\n\n\n    handleTextChange(event) {\n        this.setState({\n            textValue: event.target.value\n        });\n    }\n\n    handleClick1 = (event) => {\n        event.preventDefault();\n        this.startAssistant();\n    }\n\n    handleClick2 = (event) => {\n        event.preventDefault();\n        this.stopAssistant();\n        console.log(this.state)\n    }\n\n    render() {\n        return (\n            <div className=\"bg-gold\">\n                \n                {/* Voice commands action buttons */}\n                <textarea onChange={this.handleTextChange} id={this.props.id} value={this.state.textValue} style={{width:\"200px\",height:\"auto\"}}/>\n                <input type=\"image\" value=\"Start Artyom\" disabled={this.state.artyomActive} src=\"https://robohash.org/1\" style={{width:\"auto\",height:\"50px\"}} onClick={this.handleClick1}/>\n                <input type=\"image\" value=\"Stop Artyom\" disabled={!this.state.artyomActive} src=\"https://robohash.org/2\" style={{width:\"auto\",height:\"50px\"}} onClick={this.handleClick2}/>\n                <br/>\n                {/* Speech synthesis Area */}      \n                \n                \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}