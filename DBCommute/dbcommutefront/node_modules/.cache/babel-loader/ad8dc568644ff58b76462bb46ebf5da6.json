{"ast":null,"code":"var _jsxFileName = \"/home/arpit/Parent/Voice-based-Transport-Enquiry-System/voiceenquirysystem/src/Components/Text2Speech/Text2Speech.js\";\nimport React, { Component } from 'react';\nimport './Text2Speech.css';\n\nclass Text2Speech extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      event.preventDefault();\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.speak = xyz => {\n      if (this.state.start) {\n        // Check if speaking\n        console.log(this.state);\n        const synth = window.speechSynthesis;\n\n        if (synth.speaking) {\n          console.error('Already speaking...');\n          return;\n        } // Get speak text\n\n\n        const speakText = new SpeechSynthesisUtterance(xyz); // Speak end\n\n        speakText.onend = e => {\n          console.log('Done speaking...');\n        }; // Speak error\n\n\n        speakText.onerror = e => {\n          console.error('Something went wrong');\n        }; // Speak\n\n\n        synth.speak(speakText);\n      }\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.speak(this.state.speech);\n    };\n\n    this.state = {\n      speech: '',\n      start: 'true'\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrapped Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      name: \"speech\",\n      id: \"text-input\",\n      onChange: this.handleChange,\n      className: \"form-control form-control-lg\",\n      placeholder: \"Type anything...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-light btn-lg btn-block\",\n      onClick: this.handleSubmit,\n      value: \"Speak\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Text2Speech;","map":{"version":3,"sources":["/home/arpit/Parent/Voice-based-Transport-Enquiry-System/voiceenquirysystem/src/Components/Text2Speech/Text2Speech.js"],"names":["React","Component","Text2Speech","constructor","props","handleChange","event","preventDefault","target","name","value","setState","speak","xyz","state","start","console","log","synth","window","speechSynthesis","speaking","error","speakText","SpeechSynthesisUtterance","onend","e","onerror","handleSubmit","speech","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,mBAAP;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CACA;AACEE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAQlBC,YARkB,GAQFC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AADwB,4BAELD,KAAK,CAACE,MAFD;AAAA,YAEjBC,IAFiB,iBAEjBA,IAFiB;AAAA,YAEZC,KAFY,iBAEZA,KAFY;AAGxB,WAAKC,QAAL,CAAc;AAAC,SAACF,IAAD,GAAOC;AAAR,OAAd;AAED,KAbiB;;AAAA,SAgBhBE,KAhBgB,GAgBPC,GAAD,IAAS;AACf,UAAG,KAAKC,KAAL,CAAWC,KAAd,EACN;AACM;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACA,cAAMI,KAAK,GAAGC,MAAM,CAACC,eAArB;;AACA,YAAIF,KAAK,CAACG,QAAV,EAAoB;AAClBL,UAAAA,OAAO,CAACM,KAAR,CAAc,qBAAd;AACA;AACD,SAPP,CASQ;;;AACA,cAAMC,SAAS,GAAG,IAAIC,wBAAJ,CAA6BX,GAA7B,CAAlB,CAVR,CAYQ;;AACAU,QAAAA,SAAS,CAACE,KAAV,GAAkBC,CAAC,IAAI;AACrBV,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAED,SAHD,CAbR,CAkBQ;;;AACAM,QAAAA,SAAS,CAACI,OAAV,GAAoBD,CAAC,IAAI;AACvBV,UAAAA,OAAO,CAACM,KAAR,CAAc,sBAAd;AACD,SAFD,CAnBR,CAuBQ;;;AACAJ,QAAAA,KAAK,CAACN,KAAN,CAAYW,SAAZ;AAEN;AAAI,KA5Cc;;AAAA,SAgDlBK,YAhDkB,GAgDFtB,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKK,KAAL,CAAW,KAAKE,KAAL,CAAWe,MAAtB;AAED,KApDiB;;AAEhB,SAAKf,KAAL,GAAa;AACTe,MAAAA,MAAM,EAAC,EADE;AAETd,MAAAA,KAAK,EAAC;AAFG,KAAb;AAID;;AAiDDe,EAAAA,MAAM,GACN;AACI,WAEA;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAU,MAAA,IAAI,EAAC,QAAf;AAAwB,MAAA,EAAE,EAAC,YAA3B;AAAwC,MAAA,QAAQ,EAAE,KAAKzB,YAAvD;AAAqE,MAAA,SAAS,EAAC,8BAA/E;AAA8G,MAAA,WAAW,EAAC,kBAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,gCAA/B;AAAgE,MAAA,OAAO,EAAE,KAAKuB,YAA9E;AAA4F,MAAA,KAAK,EAAC,OAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFA;AASH;;AAnEH;;AAsEA,eAAe1B,WAAf","sourcesContent":["import React,{Component} from 'react';\nimport './Text2Speech.css';\n\nclass Text2Speech extends Component\n{\n  constructor(props){\n    super(props);\n    this.state = {\n        speech:'',\n        start:'true'\n   };\n  }\n\n  handleChange = (event) => {\n    event.preventDefault();\n    const {name,value}=event.target;\n    this.setState({[name]:value});\n    \n  }\n\n\n    speak = (xyz) => {\n      if(this.state.start)\n{\n      // Check if speaking\n      console.log(this.state);\n      const synth = window.speechSynthesis;\n      if (synth.speaking) {\n        console.error('Already speaking...');\n        return;\n      }\n        \n        // Get speak text\n        const speakText = new SpeechSynthesisUtterance(xyz);\n\n        // Speak end\n        speakText.onend = e => {\n          console.log('Done speaking...');\n\n        };\n\n        // Speak error\n        speakText.onerror = e => {\n          console.error('Something went wrong');\n        };\n\n        // Speak\n        synth.speak(speakText);\n      \n }   };\n\n\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.speak(this.state.speech);\n    \n  }\n\n\n  render()\n  {\n      return (\n\n      <div className='wrapped Container'>\n          <textarea name=\"speech\" id=\"text-input\" onChange={this.handleChange} className=\"form-control form-control-lg\" placeholder=\"Type anything...\"></textarea>\n          <input type=\"submit\" className=\"btn btn-light btn-lg btn-block\" onClick={this.handleSubmit} value=\"Speak\"/>\n      </div>\n\n      );\n    \n  }\n}\n\nexport default Text2Speech;\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}