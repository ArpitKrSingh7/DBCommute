USE DBCommute;

-- Drop tables in reverse dependency order
DROP TABLE IF EXISTS SeatsBooked, Through, Passenger, SeatInfo, Ticket, DriverDetails, BusStops, RouteDetails, TimeForTravel, BusSchedule, BusInfo, Admin, NonAdmin, UserTable;

-- User Table
CREATE TABLE UserTable (
  ID BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  Email VARCHAR(40) NOT NULL UNIQUE,
  Name VARCHAR(30),
  Password VARCHAR(15) NOT NULL,
  Usertype VARCHAR(10) NOT NULL
);

-- Non-Admin Table
CREATE TABLE NonAdmin (
  ID BIGINT UNSIGNED PRIMARY KEY,
  Gender VARCHAR(7),
  Phone BIGINT NOT NULL UNIQUE CHECK (Phone > 999999999),
  Address VARCHAR(100),
  FOREIGN KEY (ID) REFERENCES UserTable(ID) ON DELETE CASCADE
);

-- Admin Table
CREATE TABLE Admin (
  ID BIGINT UNSIGNED,
  AgencyName VARCHAR(35) NOT NULL UNIQUE,
  AgencyPhone BIGINT NOT NULL UNIQUE CHECK (AgencyPhone > 999999999),
  AgencyOffice VARCHAR(50),
  PRIMARY KEY (AgencyName),
  FOREIGN KEY (ID) REFERENCES UserTable(ID) ON DELETE CASCADE
);

-- Bus Info
CREATE TABLE BusInfo (
  BusRegnNo VARCHAR(15) NOT NULL PRIMARY KEY,
  AgencyName VARCHAR(35) NOT NULL,
  TotalSeats INT DEFAULT 40,
  AC BOOLEAN DEFAULT FALSE,
  LocationName VARCHAR(20),
  Latitude DECIMAL(17,10),
  Longitude DECIMAL(17,10),
  FOREIGN KEY (AgencyName) REFERENCES Admin(AgencyName) ON DELETE CASCADE
);

-- Driver Details
CREATE TABLE DriverDetails (
  DriverID BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  DriverName VARCHAR(20) NOT NULL,
  DriverPhone BIGINT CHECK (DriverPhone > 999999999),
  Age INT CHECK (Age > 0),
  Date_Of_Join DATE
);

-- Route Details
CREATE TABLE RouteDetails (
  RouteID INT PRIMARY KEY CHECK (RouteID > 0),
  RouteName VARCHAR(30) NOT NULL,
  Source VARCHAR(30) NOT NULL,
  Destination VARCHAR(30) NOT NULL
);

-- Bus Schedule
CREATE TABLE BusSchedule (
  BusRegnNo VARCHAR(15) NOT NULL,
  RouteID INT NOT NULL CHECK (RouteID > 0),
  DriverID BIGINT UNSIGNED NOT NULL,
  StartTime DECIMAL(4,2) CHECK (StartTime >= 0 AND StartTime < 24),
  Fare INT CHECK (Fare > 0),
  ReservedSeats INT DEFAULT 0,
  TravelTime DECIMAL(10,2) CHECK (TravelTime > 0),
  PRIMARY KEY (RouteID, DriverID, StartTime),
  FOREIGN KEY (BusRegnNo) REFERENCES BusInfo(BusRegnNo) ON DELETE CASCADE,
  FOREIGN KEY (RouteID) REFERENCES RouteDetails(RouteID) ON DELETE CASCADE,
  FOREIGN KEY (DriverID) REFERENCES DriverDetails(DriverID) ON DELETE CASCADE
);

-- Time For Travel
CREATE TABLE TimeForTravel (
  TravelTime DECIMAL(10,2),
  StartTime DECIMAL(4,2),
  EndTime DECIMAL(5,2),
  PRIMARY KEY (TravelTime, StartTime)
);

-- Bus Stops
CREATE TABLE BusStops (
  RouteID INT NOT NULL,
  IntermediateStops VARCHAR(20) NOT NULL,
  StopNumber INT NOT NULL CHECK (StopNumber > 0),
  PRIMARY KEY (RouteID, StopNumber),
  FOREIGN KEY (RouteID) REFERENCES RouteDetails(RouteID) ON DELETE CASCADE
);

-- Ticket
CREATE TABLE Ticket (
  TicketPNR BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  BusRegnNo VARCHAR(15) NOT NULL,
  BookingDate DATE,
  TravelDate DATE,
  FOREIGN KEY (BusRegnNo) REFERENCES BusInfo(BusRegnNo)
);

-- Seats Booked
CREATE TABLE SeatsBooked (
  TicketPNR BIGINT UNSIGNED NOT NULL,
  BookedSeats INT,
  PRIMARY KEY (TicketPNR, BookedSeats),
  FOREIGN KEY (TicketPNR) REFERENCES Ticket(TicketPNR) ON DELETE CASCADE
);

-- Seat Info
CREATE TABLE SeatInfo (
  BusRegnNo VARCHAR(15) NOT NULL,
  SeatNo INT CHECK (SeatNo <= 40),
  Sleeper BOOLEAN DEFAULT FALSE,
  PRIMARY KEY (BusRegnNo, SeatNo),
  FOREIGN KEY (BusRegnNo) REFERENCES BusInfo(BusRegnNo) ON DELETE CASCADE
);

-- Passenger
CREATE TABLE Passenger (
  PassengerID BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  ID BIGINT UNSIGNED NOT NULL,
  BusRegnNo VARCHAR(15) NOT NULL,
  PassengerName VARCHAR(20),
  PassengeGender VARCHAR(7),
  Age INT CHECK (Age > 5),
  FOREIGN KEY (ID) REFERENCES NonAdmin(ID) ON DELETE CASCADE,
  FOREIGN KEY (BusRegnNo) REFERENCES BusInfo(BusRegnNo) ON DELETE CASCADE
);

-- Through
CREATE TABLE Through (
  RouteID INT NOT NULL,
  DriverID BIGINT UNSIGNED NOT NULL,
  StartTime DECIMAL(4,2),
  BusRegnNo VARCHAR(15) NOT NULL,
  TicketPNR BIGINT UNSIGNED NOT NULL,
  PRIMARY KEY (RouteID, DriverID, StartTime, TicketPNR),
  FOREIGN KEY (RouteID, DriverID, StartTime) REFERENCES BusSchedule(RouteID, DriverID, StartTime) ON DELETE CASCADE,
  FOREIGN KEY (BusRegnNo) REFERENCES BusInfo(BusRegnNo) ON DELETE CASCADE,
  FOREIGN KEY (TicketPNR) REFERENCES Ticket(TicketPNR) ON DELETE CASCADE
);

-- First, create all tables (previous CREATE TABLE statements here)
-- Make sure all tables are created successfully before adding triggers/procedures
-- Insert into UserTable (both admins and regular users)
INSERT INTO UserTable (Email, Name, Password, Usertype) VALUES
('admin1@agency.com', 'Rajesh Kumar', 'admin123', 'admin'),
('admin2@agency.com', 'Priya Sharma', 'admin456', 'admin'),
('user1@gmail.com', 'Amit Patel', 'pass123', 'passenger'),
('user2@gmail.com', 'Neha Gupta', 'pass456', 'passenger'),
('user3@gmail.com', 'Vikram Singh', 'pass789', 'passenger');

-- Insert into Admin (agency details)
INSERT INTO Admin (ID, AgencyName, AgencyPhone, AgencyOffice) VALUES
(1, 'City Travels', '9876543210', 'Bangalore Main Office'),
(2, 'Express Buses', '8765432109', 'Chennai Branch Office');

-- Insert into NonAdmin (passenger details)
INSERT INTO NonAdmin (ID, Gender, Phone, Address) VALUES
(3, 'Male', '9876543210', '123 MG Road, Bangalore'),
(4, 'Female', '8765432109', '456 Brigade Road, Bangalore'),
(5, 'Male', '7654321098', '789 Indiranagar, Bangalore');

-- Insert into BusInfo (bus details)
INSERT INTO BusInfo (BusRegnNo, AgencyName, TotalSeats, AC, LocationName, Latitude, Longitude) VALUES
('KA01AB1234', 'City Travels', 40, 1, 'Bangalore', 12.9715987, 77.5945627),
('KA02CD5678', 'City Travels', 35, 0, 'Bangalore', 12.9715987, 77.5945627),
('TN01EF9012', 'Express Buses', 40, 1, 'Chennai', 13.0826802, 80.2707184);

-- Insert into DriverDetails
INSERT INTO DriverDetails (DriverID, DriverName, DriverPhone, Age, Date_Of_Join) VALUES
(121, 'Prithvi', '9834534565', 29, '2017-09-22'),
(122, 'Rahul', '9845634565', 35, '2018-05-15'),
(123, 'Sanjay', '9856734565', 42, '2016-11-30'),
(124, 'Anil', '9867834565', 38, '2019-02-10'),
(125, 'Vijay', '9878934565', 31, '2020-07-25');

-- Insert into RouteDetails
INSERT INTO RouteDetails (RouteID, RouteName, Source, Destination) VALUES
(1, 'BGL-CNI', 'Bangalore', 'Chennai'),
(2, 'BGL-TRR', 'Bangalore', 'Tirupur'),
(3, 'CNI-BGL', 'Chennai', 'Bangalore'),
(4, 'CNI-MSR', 'Chennai', 'Mysore');

-- Insert into BusSchedule
INSERT INTO BusSchedule (BusRegnNo, RouteID, DriverID, StartTime, Fare, ReservedSeats, TravelTime) VALUES
('KA01AB1234', 1, 121, 17.30, 1200, 15, 12),
('KA01AB1234', 1, 122, 19.00, 1200, 10, 15),
('KA02CD5678', 2, 123, 19.45, 800, 5, 14),
('TN01EF9012', 3, 124, 19.15, 1100, 8, 15),
('TN01EF9012', 4, 125, 1.00, 900, 3, 17);

-- Insert into BusStops
INSERT INTO BusStops (RouteID, IntermediateStops, StopNumber) VALUES
(1, 'Hosur', 1),
(1, 'Krishnagiri', 2),
(1, 'Vellore', 3),
(2, 'Hosur', 1),
(2, 'Dharmapuri', 2),
(3, 'Vellore', 1),
(3, 'Krishnagiri', 2),
(4, 'Vellore', 1),
(4, 'Bangalore', 2);

-- Insert into Ticket
INSERT INTO Ticket (BusRegnNo, TicketPNR, BookingDate, TravelDate) VALUES
('KA01AB1234', 1001, '2023-01-10', '2023-01-15'),
('KA01AB1234', 1002, '2023-01-11', '2023-01-16'),
('KA02CD5678', 1003, '2023-01-12', '2023-01-17'),
('TN01EF9012', 1004, '2023-01-13', '2023-01-18'),
('TN01EF9012', 1005, '2023-01-14', '2023-01-19');

-- Insert into SeatsBooked
INSERT INTO SeatsBooked (TicketPNR, BookedSeats) VALUES
(1001, 10),
(1001, 11),
(1002, 15),
(1002, 16),
(1003, 20),
(1003, 21),
(1004, 25),
(1004, 26),
(1005, 30),
(1005, 31);

-- Insert into Passenger
INSERT INTO Passenger (ID, BusRegnNo, PassengerID, PassengerName, PassengeGender, Age) VALUES
(3, 'KA01AB1234', 101, 'Amit Patel', 'Male', 28),
(4, 'KA01AB1234', 102, 'Neha Gupta', 'Female', 25),
(5, 'KA02CD5678', 103, 'Vikram Singh', 'Male', 32),
(3, 'TN01EF9012', 104, 'Amit Patel', 'Male', 28),
(4, 'TN01EF9012', 105, 'Neha Gupta', 'Female', 25);

-- Insert into Through
INSERT INTO Through (RouteID, DriverID, StartTime, BusRegnNo, TicketPNR) VALUES
(1, 121, 17.30, 'KA01AB1234', 1001),
(1, 122, 19.00, 'KA01AB1234', 1002),
(2, 123, 19.45, 'KA02CD5678', 1003),
(3, 124, 19.15, 'TN01EF9012', 1004),
(4, 125, 1.00, 'TN01EF9012', 1005);
-- -- Then create the trigger with minimal syntax
-- CREATE TRIGGER TimeTravel AFTER INSERT ON BusSchedule
-- FOR EACH ROW
-- INSERT INTO TimeForTravel 
-- SET TravelTime = NEW.TravelTime,
--     StartTime = NEW.StartTime,
--     EndTime = IF(NEW.TravelTime + NEW.StartTime >= 24.00,
--                NEW.TravelTime + NEW.StartTime - 24.00,
--                NEW.TravelTime + NEW.StartTime);

-- -- Finally create the procedure with minimal syntax
-- CREATE PROCEDURE totalrevenue()
-- BEGIN
--   SELECT BI.AgencyName, SUM(BS.Fare) AS TotalRevenue
--   FROM BusInfo BI
--   JOIN BusSchedule BS ON BI.BusRegnNo = BS.BusRegnNo
--   GROUP BY BI.AgencyName;
-- END;
